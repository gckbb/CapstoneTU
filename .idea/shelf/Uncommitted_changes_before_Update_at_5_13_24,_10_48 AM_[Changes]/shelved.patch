Index: app/src/main/java/com/example/kakaotest/Login/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakaotest.Login\n//이거 테스트임\nimport android.content.ContentValues.TAG\nimport android.content.DialogInterface\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.os.Bundle\nimport android.util.Base64\nimport android.util.Log\nimport android.widget.Button\nimport android.widget.EditText\nimport android.widget.ImageView\nimport android.widget.TextView\nimport android.widget.Toast\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.databinding.DataBindingUtil\nimport com.example.kakaotest.HomeActivity\nimport com.example.kakaotest.Login.Email.EmailLogin\nimport com.example.kakaotest.Login.Id.IdFindId\nimport com.example.kakaotest.Login.Id.IdFindPw\nimport com.example.kakaotest.Login.Id.IdSignup\nimport com.example.kakaotest.Map.MapActivity\nimport com.example.kakaotest.R\nimport com.example.kakaotest.TourApi.TourApiActivity\nimport com.example.kakaotest.Utility.AlertDialogHelper\nimport com.example.kakaotest.Utility.dialog.AlertDialogHelper\nimport com.example.kakaotest.databinding.ActivityMainBinding\nimport com.example.kakaotest.HomeActivity\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\nimport com.google.android.gms.common.api.ApiException\nimport com.google.firebase.auth.FirebaseAuth\nimport com.google.firebase.auth.FirebaseUser\nimport com.google.firebase.auth.GoogleAuthProvider\nimport com.google.firebase.firestore.FirebaseFirestore\nimport com.kakao.sdk.auth.model.OAuthToken\nimport com.kakao.sdk.common.KakaoSdk\nimport com.kakao.sdk.common.model.ClientError\nimport com.kakao.sdk.common.model.ClientErrorCause\nimport com.kakao.sdk.user.UserApiClient\nimport kotlinx.coroutines.MainScope\nimport java.security.MessageDigest\n\n//첫 로그인 화면\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var auth: FirebaseAuth\n    private val scope = MainScope()\n\n    lateinit var kakaoCallback: (OAuthToken?, Throwable?) -> Unit\n    private lateinit var binding: ActivityMainBinding\n    lateinit var googleSignInClient: GoogleSignInClient\n\n    lateinit var imageview: ImageView\n    val callback: (OAuthToken?, Throwable?) -> Unit = { token, error ->\n        if (error != null) {\n            Log.e(TAG, \"카카오계정으로 로그인 실패\", error)\n        } else if (token != null) {\n            Log.i(TAG, \"카카오계정으로 로그인 성공 ${token.accessToken}\")\n        }\n    }\n\n\n    //구글 로그인\n    var googleLoginReult =\n        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->\n\n            var data = result.data\n            var task = GoogleSignIn.getSignedInAccountFromIntent(data)\n            val account = task.getResult(ApiException::class.java)\n            firebaseAuthWithGoogle(account.idToken)\n        }\n\n    fun firebaseAuthWithGoogle(idToken: String?) {\n        var credential = GoogleAuthProvider.getCredential(idToken, null)\n\n        auth.signInWithCredential((credential)).addOnCompleteListener { task ->\n            if (task.isSuccessful) {\n                moveMainPage(task.result?.user)\n            }\n        }\n    }\n\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        auth = FirebaseAuth.getInstance() //2 FirebaseAuth의 인스턴스 초기화\n        super.onCreate(savedInstanceState)\n        KakaoSdk.init(this, getString(R.string.kakao_app_key))\n\n        //setContentView(R.layout.activity_main)\n        binding = ActivityMainBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_main)\n\n        //지도 생성 테스트 버튼\n        binding.tmapViewbtn.setOnClickListener{\n            val intent = Intent(this, MapActivity::class.java)\n            startActivity(intent)\n        }\n\n        // 테스트 버튼\n        binding.navi.setOnClickListener{\n            val intent = Intent(this, HomeActivity::class.java)\n            startActivity(intent)\n        }\n        binding.tourApi.setOnClickListener {\n            val intent = Intent(this, TourApiActivity::class.java)\n            startActivity(intent)\n        }\n//        binding.checklist.setOnClickListener {\n//            val intent = Intent(this, TourApiActivity::class.java)\n//            startActivity(intent)\n//        }\n\n        //아이디 찾기\n        val findidBtn =findViewById<TextView>(R.id.FindId)\n        findidBtn.setOnClickListener {\n            val intent = Intent(this, IdFindId::class.java)\n            startActivity(intent)\n        }\n        //비밀번호 찾기\n        val findPwBtn =findViewById<TextView>(R.id.FindPW)\n        findPwBtn.setOnClickListener {\n            val intent = Intent(this, IdFindPw::class.java)\n            startActivity(intent)\n        }\n        //자체 회원가입\n        val signUpBtn =findViewById<TextView>(R.id.signupbtn)\n        signUpBtn.setOnClickListener {\n            val intent = Intent(this, IdSignup::class.java)\n            startActivity(intent)\n        }\n\n\n        //이메일 로그인 및 회원가입 버튼\n        val emailsignbtn =findViewById<Button>(R.id. email_login_button)\n        emailsignbtn.setOnClickListener {\n            val intent =Intent(this, EmailLogin::class.java)\n            startActivity(intent)\n        }\n\n\n            // Firebase Firestore 초기화\n            var firestore: FirebaseFirestore? = null\n            firestore = FirebaseFirestore.getInstance()\n\n\n            //아이디 로그인\n\n            val loginBtn = findViewById<Button>(R.id.id_login_button)\n            loginBtn.setOnClickListener {\n\n                val id: EditText = findViewById<EditText>(R.id.id_edittext)\n                val password = findViewById<EditText>(R.id.password_edittext)\n                var enteredId: String = id.text.toString()\n                var enteredPassword: String = password.text.toString()\n\n                // \"user\" 컬렉션에서 쿼리 생성\n                val query = firestore.collection(\"user\")\n                    .whereEqualTo(\"id\", enteredId)\n\n                query.get()\n                    .addOnSuccessListener { documents ->\n                        if (documents.isEmpty) {\n                            // 사용자 아이디와 일치하는 문서가 없을 경우\n                            AlertDialogHelper().showAlertMessage(this,\n                                \"해당 아이디가 존재하지 않습니다.\",\n                                \"확인\",\n                                null,\n                                null,\n                                DialogInterface.OnClickListener { dialog, which ->\n                                    if (which == DialogInterface.BUTTON_POSITIVE) {\n                                        dialog.dismiss()\n                                    }\n\n                                })\n                        } else {\n                            // 사용자 아이디와 일치하는 문서가 있을 경우\n                            for (document in documents) {\n                                val savedPassword = document.getString(\"pw\")\n                                if (savedPassword == enteredPassword) {\n                                    // 비밀번호가 일치하는 경우\n                                    Toast.makeText(this, \"로그인 성공\", Toast.LENGTH_SHORT).show()\n                                    SavedUser().saveUserDataToSharedPreferences(this, document.id)\n                                    Toast.makeText(\n                                        this,\n                                        \"저장된 document Id = $document.id\",\n                                        Toast.LENGTH_SHORT\n                                    ).show()\n                                    // 로그인 성공 후 홈 화면으로 이동\n                                    val nextIntent = Intent(this, MapActivity::class.java)\n                                    startActivity(nextIntent)\n                                } else {\n                                    // 비밀번호가 일치하지 않는 경우\n                                    AlertDialogHelper().showAlertMessage(this,\n                                        \"비밀번호가 일치하지 않습니다.\",\n                                        \"확인\",\n                                        null,\n                                        null,\n\n                                        DialogInterface.OnClickListener { dialog, which ->\n                                            if (which == DialogInterface.BUTTON_POSITIVE) {\n                                                dialog.dismiss()\n                                            }\n\n                                        })\n\n                                }\n                            }\n                        }\n                    }\n                    .addOnFailureListener { exception ->\n                        // 쿼리 중 에러 발생 시\n                        Toast.makeText(this, \"로그인 실패: $exception\", Toast.LENGTH_SHORT).show()\n                    }\n\n            }\n\n\n            binding.googleSignInButton.setOnClickListener {\n                signIn() //signin으로 이동\n            }\n\n            val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\n                .requestIdToken(getString(R.string.default_web_client_id))\n                .requestEmail()\n                .requestProfile()\n                .build()\n\n            googleSignInClient = GoogleSignIn.getClient(this, gso)\n\n            //카카오 로그인 버튼\n            binding.kakaoSignInButton.setOnClickListener {\n                if (UserApiClient.instance.isKakaoTalkLoginAvailable(this)) {\n                    UserApiClient.instance.loginWithKakaoTalk(this) { token, error ->\n                        if (error != null) {\n                            Log.e(TAG, \"카카오톡으로 로그인 실패\", error)\n\n                            // 사용자가 카카오톡 설치 후 디바이스 권한 요청 화면에서 로그인을 취소한 경우,\n                            // 의도적인 로그인 취소로 보고 카카오계정으로 로그인 시도 없이 로그인 취소로 처리 (예: 뒤로 가기)\n                            if (error is ClientError && error.reason == ClientErrorCause.Cancelled) {\n                                return@loginWithKakaoTalk\n                            }\n\n                            // 카카오톡에 연결된 카카오계정이 없는 경우, 카카오계정으로 로그인 시도\n                            UserApiClient.instance.loginWithKakaoAccount(this, callback = callback)\n                        } else if (token != null) {\n                            Toast.makeText(this, \"로그인 성공\", Toast.LENGTH_LONG).show()\n                            Log.i(TAG, \"카카오톡으로 로그인 성공 ${token.accessToken}\")\n                        }\n                    }\n                } else {\n                    UserApiClient.instance.loginWithKakaoAccount(this, callback = callback)\n                }\n            }\n        }\n\n        //구글 signin 화면으로 이동\n        private fun signIn() {\n            val i = googleSignInClient.signInIntent\n            googleLoginReult.launch(i)\n        }\n\n        //로그인 activity에서 Main으로\n        fun moveMainPage(user: FirebaseUser?) {\n            if (user != null) {\n                startActivity(Intent(this, MainActivity::class.java))\n            }\n        }\n\n        //해시 키값 확인용\n        private fun getAppKeyHash() {\n            try {\n                val info = packageManager.getPackageInfo(packageName, PackageManager.GET_SIGNATURES)\n                for (signature in info.signatures) {\n                    val md: MessageDigest = MessageDigest.getInstance(\"SHA\")\n                    md.update(signature.toByteArray())\n                    val hashKey = String(Base64.encode(md.digest(), 0))\n                    Log.e(TAG, \"해시키 : $hashKey\")\n                }\n            } catch (e: Exception) {\n                Log.e(TAG, \"해시키를 찾을 수 없습니다 : $e\")\n            }\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kakaotest/Login/MainActivity.kt b/app/src/main/java/com/example/kakaotest/Login/MainActivity.kt
--- a/app/src/main/java/com/example/kakaotest/Login/MainActivity.kt	(revision ee8e470a8bdbecc3da4cf935f9912f7cc3c925ea)
+++ b/app/src/main/java/com/example/kakaotest/Login/MainActivity.kt	(date 1715564812645)
@@ -23,10 +23,8 @@
 import com.example.kakaotest.Map.MapActivity
 import com.example.kakaotest.R
 import com.example.kakaotest.TourApi.TourApiActivity
-import com.example.kakaotest.Utility.AlertDialogHelper
 import com.example.kakaotest.Utility.dialog.AlertDialogHelper
 import com.example.kakaotest.databinding.ActivityMainBinding
-import com.example.kakaotest.HomeActivity
 import com.google.android.gms.auth.api.signin.GoogleSignIn
 import com.google.android.gms.auth.api.signin.GoogleSignInClient
 import com.google.android.gms.auth.api.signin.GoogleSignInOptions
Index: app/src/main/res/layout/activity_restaurant_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"지도\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/tableLayout\" />\n\n    <TableLayout\n        android:id=\"@+id/tableLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <ImageView\n                android:id=\"@+id/mainImage\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                app:srcCompat=\"@drawable/empty\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/textViewTitle\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"textViewTitle\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/textViewAddress\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"textViewAddress\" />\n\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/textViewAddress_detail\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"textViewAddress_detail\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/cat1\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"cat1\" />\n\n            <TextView\n                android:id=\"@+id/tel\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"right\"\n                android:text=\"tel\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/cat2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"cat2\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/cat3\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"cat3\" />\n        </TableRow>\n\n    </TableLayout>\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_restaurant_detail.xml b/app/src/main/res/layout/activity_restaurant_detail.xml
--- a/app/src/main/res/layout/activity_restaurant_detail.xml	(revision ee8e470a8bdbecc3da4cf935f9912f7cc3c925ea)
+++ b/app/src/main/res/layout/activity_restaurant_detail.xml	(date 1715564453596)
@@ -105,4 +105,14 @@
 
     </TableLayout>
 
+    <FrameLayout
+        android:id="@+id/tmapViewContainer"
+        android:layout_width="409dp"
+        android:layout_height="500dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/button">
+
+    </FrameLayout>
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakaotest.TourApi\n\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.bumptech.glide.Glide\nimport com.example.kakaotest.DataModel.Restaurant\nimport com.example.kakaotest.databinding.ActivityRestaurantDetailBinding\n\nclass RestaurantDetailActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        val binding = ActivityRestaurantDetailBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        // Restaurant 객체를 인텐트에서 가져옴\n        val restaurant = intent.getSerializableExtra(\"restaurant\") as? Restaurant\n        if(restaurant != null) {\n\n            Glide.with(this)\n                .load(restaurant.firstimage)\n                .into(binding.mainImage)\n\n            binding.textViewTitle.text = restaurant.title\n            binding.textViewAddress.text = restaurant.addr1\n            binding.textViewTitle.text = restaurant.tel\n            binding.textViewAddressDetail.text = restaurant.addr2\n            binding.cat1.text = restaurant.cat1\n            binding.cat2.text = restaurant.cat2\n            binding.cat3.text = restaurant.cat3\n\n            binding.button.setOnClickListener {\n                val intent = Intent(this,Detail_map_test::class.java).apply {\n                    putExtra(\"restaurant\",restaurant)\n                }\n                startActivity(intent)\n            }\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt b/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt
--- a/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt	(revision ee8e470a8bdbecc3da4cf935f9912f7cc3c925ea)
+++ b/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt	(date 1715564453608)
@@ -1,11 +1,19 @@
 package com.example.kakaotest.TourApi
 
-import android.content.Intent
+import android.content.Context
+import android.graphics.BitmapFactory
 import android.os.Bundle
+import android.util.Log
+import android.widget.FrameLayout
+import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
 import com.bumptech.glide.Glide
 import com.example.kakaotest.DataModel.Restaurant
+import com.example.kakaotest.R
 import com.example.kakaotest.databinding.ActivityRestaurantDetailBinding
+import com.skt.tmap.TMapPoint
+import com.skt.tmap.TMapView
+import com.skt.tmap.overlay.TMapMarkerItem
 
 class RestaurantDetailActivity : AppCompatActivity() {
 
@@ -14,8 +22,31 @@
         val binding = ActivityRestaurantDetailBinding.inflate(layoutInflater)
         setContentView(binding.root)
 
+        val sharedPreferences = getSharedPreferences("MyPrefs", Context.MODE_PRIVATE)
+        sharedPreferences.edit().putString("app_key", "8Mi9e1fjtt8L0SrwDMyWt9rSnLCShADl5BWTm3EP").apply()
+
+        // 값을 가져옴
+        val appKey: String? = sharedPreferences.getString("app_key", null)
+
+        // FrameLayout 컨테이너를 XML에서 찾아옴
+        val container: FrameLayout = findViewById(R.id.tmapViewContainer)
+
+        // TMapView 인스턴스를 생성
+        val tMapView = TMapView(this)
+
+        // TMapView를 FrameLayout에 추가
+        container.addView(tMapView)
+
+        // 발급받은 키로 TMapView에 API 키 설정
+        tMapView.setSKTMapApiKey(appKey)
+
+        val marker = TMapMarkerItem()
+
         // Restaurant 객체를 인텐트에서 가져옴
         val restaurant = intent.getSerializableExtra("restaurant") as? Restaurant
+
+        var selcted = TMapPoint(restaurant!!.mapx.toDouble(),restaurant.mapy.toDouble())
+
         if(restaurant != null) {
 
             Glide.with(this)
@@ -29,14 +60,48 @@
             binding.cat1.text = restaurant.cat1
             binding.cat2.text = restaurant.cat2
             binding.cat3.text = restaurant.cat3
+        }
+
+        tMapView.setOnMapReadyListener(object : TMapView.OnMapReadyListener {
+            override fun onMapReady() {
+                // 맵 로딩이 완료된 후에 수행할 동작을 구현해주세요
+                // 예: 마커 추가, 경로 표시 등
+                Toast.makeText(this@RestaurantDetailActivity, "MapLoading", Toast.LENGTH_SHORT).show()
+
+                if (restaurant != null) {
+                    Log.d("restaurant","${restaurant.title}, ${restaurant.mapx}, ${restaurant.mapy.toDouble()}")
+                    Log.d("restaurant","1.${tMapView.centerPoint}")
+                    marker.setTMapPoint(selcted.latitude,selcted.longitude)
+                    marker.id = "marker1"
+                    marker.icon = BitmapFactory.decodeResource(resources, R.drawable.poi)
+                    marker.visible = true
+
+                    tMapView.addTMapMarkerItem(marker)
+                    tMapView.setCenterPoint(selcted.latitude,selcted.longitude)
+                    tMapView.setLocationPoint(selcted.latitude,selcted.longitude)
+
+                    Log.d("restaurant","2.${tMapView.centerPoint}")
+                }
+                //tMapView.zoomLevel = 15
 
-            binding.button.setOnClickListener {
-                val intent = Intent(this,Detail_map_test::class.java).apply {
-                    putExtra("restaurant",restaurant)
+                binding.button.setOnClickListener {
+                    Log.d("restaurant","${restaurant.title}, ${restaurant.mapx}, ${restaurant.mapy.toDouble()}")
+                    Log.d("restaurant","3.${tMapView.centerPoint}")
+                    marker.setTMapPoint(selcted.latitude,selcted.longitude)
+                    marker.id = "marker1"
+                    marker.icon = BitmapFactory.decodeResource(resources, R.drawable.poi)
+                    marker.visible = true
+
+                    tMapView.addTMapMarkerItem(marker)
+                    tMapView.setCenterPoint(selcted.latitude,selcted.longitude)
+                    tMapView.setLocationPoint(selcted.latitude,selcted.longitude)
+                    tMapView.zoomLevel = 15
+
+                    Log.d("restaurant","4.${tMapView.centerPoint}")
                 }
-                startActivity(intent)
             }
-        }
+        })
+
 
     }
 }
Index: app/src/main/java/com/example/kakaotest/FeatureCollection.kt
===================================================================
diff --git a/app/src/main/java/com/example/kakaotest/FeatureCollection.kt b/app/src/main/java/com/example/kakaotest/FeatureCollection.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/kakaotest/FeatureCollection.kt	(revision ee8e470a8bdbecc3da4cf935f9912f7cc3c925ea)
+++ /dev/null	(revision ee8e470a8bdbecc3da4cf935f9912f7cc3c925ea)
@@ -1,11 +0,0 @@
-package com.example.kakaotest
-
-import com.example.kakaotest.Map.RouteFeature
-import com.google.gson.annotations.SerializedName
-
-data class FeatureCollection(
-    @SerializedName("type")
-    val type: String? = null,
-    @SerializedName("features")
-    val features: List<RouteFeature>? = null
-)
Index: .idea/migrations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/migrations.xml b/.idea/migrations.xml
new file mode 100644
--- /dev/null	(date 1715564509998)
+++ b/.idea/migrations.xml	(date 1715564509998)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectMigrations">
+    <option name="MigrateToGradleLocalJavaHome">
+      <set>
+        <option value="$PROJECT_DIR$" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
