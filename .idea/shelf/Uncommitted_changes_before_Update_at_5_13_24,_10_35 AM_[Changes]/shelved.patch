Index: app/src/main/res/layout/activity_restaurant_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"지도\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/tableLayout\" />\n\n    <TableLayout\n        android:id=\"@+id/tableLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <ImageView\n                android:id=\"@+id/mainImage\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                app:srcCompat=\"@drawable/empty\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/textViewTitle\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"textViewTitle\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/textViewAddress\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"textViewAddress\" />\n\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/textViewAddress_detail\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"textViewAddress_detail\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/cat1\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"cat1\" />\n\n            <TextView\n                android:id=\"@+id/tel\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"right\"\n                android:text=\"tel\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/cat2\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"cat2\" />\n        </TableRow>\n\n        <TableRow\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n\n            <TextView\n                android:id=\"@+id/cat3\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"cat3\" />\n        </TableRow>\n\n    </TableLayout>\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_restaurant_detail.xml b/app/src/main/res/layout/activity_restaurant_detail.xml
--- a/app/src/main/res/layout/activity_restaurant_detail.xml	(revision 584ebf9acf3f82ddbb5696296a449e1b54df3c3c)
+++ b/app/src/main/res/layout/activity_restaurant_detail.xml	(date 1715330555078)
@@ -105,4 +105,14 @@
 
     </TableLayout>
 
+    <FrameLayout
+        android:id="@+id/tmapViewContainer"
+        android:layout_width="409dp"
+        android:layout_height="500dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/button">
+
+    </FrameLayout>
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakaotest.TourApi\n\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.bumptech.glide.Glide\nimport com.example.kakaotest.DataModel.Restaurant\nimport com.example.kakaotest.databinding.ActivityRestaurantDetailBinding\n\nclass RestaurantDetailActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        val binding = ActivityRestaurantDetailBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        // Restaurant 객체를 인텐트에서 가져옴\n        val restaurant = intent.getSerializableExtra(\"restaurant\") as? Restaurant\n        if(restaurant != null) {\n\n            Glide.with(this)\n                .load(restaurant.firstimage)\n                .into(binding.mainImage)\n\n            binding.textViewTitle.text = restaurant.title\n            binding.textViewAddress.text = restaurant.addr1\n            binding.textViewTitle.text = restaurant.tel\n            binding.textViewAddressDetail.text = restaurant.addr2\n            binding.cat1.text = restaurant.cat1\n            binding.cat2.text = restaurant.cat2\n            binding.cat3.text = restaurant.cat3\n\n            binding.button.setOnClickListener {\n                val intent = Intent(this,Detail_map_test::class.java).apply {\n                    putExtra(\"restaurant\",restaurant)\n                }\n                startActivity(intent)\n            }\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt b/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt
--- a/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt	(revision 584ebf9acf3f82ddbb5696296a449e1b54df3c3c)
+++ b/app/src/main/java/com/example/kakaotest/TourApi/RestaurantDetailActivity.kt	(date 1715333017336)
@@ -1,11 +1,19 @@
 package com.example.kakaotest.TourApi
 
-import android.content.Intent
+import android.content.Context
+import android.graphics.BitmapFactory
 import android.os.Bundle
+import android.util.Log
+import android.widget.FrameLayout
+import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
 import com.bumptech.glide.Glide
 import com.example.kakaotest.DataModel.Restaurant
+import com.example.kakaotest.R
 import com.example.kakaotest.databinding.ActivityRestaurantDetailBinding
+import com.skt.tmap.TMapPoint
+import com.skt.tmap.TMapView
+import com.skt.tmap.overlay.TMapMarkerItem
 
 class RestaurantDetailActivity : AppCompatActivity() {
 
@@ -14,8 +22,31 @@
         val binding = ActivityRestaurantDetailBinding.inflate(layoutInflater)
         setContentView(binding.root)
 
+        val sharedPreferences = getSharedPreferences("MyPrefs", Context.MODE_PRIVATE)
+        sharedPreferences.edit().putString("app_key", "8Mi9e1fjtt8L0SrwDMyWt9rSnLCShADl5BWTm3EP").apply()
+
+        // 값을 가져옴
+        val appKey: String? = sharedPreferences.getString("app_key", null)
+
+        // FrameLayout 컨테이너를 XML에서 찾아옴
+        val container: FrameLayout = findViewById(R.id.tmapViewContainer)
+
+        // TMapView 인스턴스를 생성
+        val tMapView = TMapView(this)
+
+        // TMapView를 FrameLayout에 추가
+        container.addView(tMapView)
+
+        // 발급받은 키로 TMapView에 API 키 설정
+        tMapView.setSKTMapApiKey(appKey)
+
+        val marker = TMapMarkerItem()
+
         // Restaurant 객체를 인텐트에서 가져옴
         val restaurant = intent.getSerializableExtra("restaurant") as? Restaurant
+
+        var selcted = TMapPoint(restaurant!!.mapx.toDouble(),restaurant.mapy.toDouble())
+
         if(restaurant != null) {
 
             Glide.with(this)
@@ -29,14 +60,48 @@
             binding.cat1.text = restaurant.cat1
             binding.cat2.text = restaurant.cat2
             binding.cat3.text = restaurant.cat3
+        }
+
+        tMapView.setOnMapReadyListener(object : TMapView.OnMapReadyListener {
+            override fun onMapReady() {
+                // 맵 로딩이 완료된 후에 수행할 동작을 구현해주세요
+                // 예: 마커 추가, 경로 표시 등
+                Toast.makeText(this@RestaurantDetailActivity, "MapLoading", Toast.LENGTH_SHORT).show()
+
+                if (restaurant != null) {
+                    Log.d("restaurant","${restaurant.title}, ${restaurant.mapx}, ${restaurant.mapy.toDouble()}")
+                    Log.d("restaurant","1.${tMapView.centerPoint}")
+                    marker.setTMapPoint(selcted.latitude,selcted.longitude)
+                    marker.id = "marker1"
+                    marker.icon = BitmapFactory.decodeResource(resources, R.drawable.poi)
+                    marker.visible = true
+
+                    tMapView.addTMapMarkerItem(marker)
+                    tMapView.setCenterPoint(selcted.latitude,selcted.longitude)
+                    tMapView.setLocationPoint(selcted.latitude,selcted.longitude)
+
+                    Log.d("restaurant","2.${tMapView.centerPoint}")
+                }
+                //tMapView.zoomLevel = 15
 
-            binding.button.setOnClickListener {
-                val intent = Intent(this,Detail_map_test::class.java).apply {
-                    putExtra("restaurant",restaurant)
+                binding.button.setOnClickListener {
+                    Log.d("restaurant","${restaurant.title}, ${restaurant.mapx}, ${restaurant.mapy.toDouble()}")
+                    Log.d("restaurant","3.${tMapView.centerPoint}")
+                    marker.setTMapPoint(selcted.latitude,selcted.longitude)
+                    marker.id = "marker1"
+                    marker.icon = BitmapFactory.decodeResource(resources, R.drawable.poi)
+                    marker.visible = true
+
+                    tMapView.addTMapMarkerItem(marker)
+                    tMapView.setCenterPoint(selcted.latitude,selcted.longitude)
+                    tMapView.setLocationPoint(selcted.latitude,selcted.longitude)
+                    tMapView.zoomLevel = 15
+
+                    Log.d("restaurant","4.${tMapView.centerPoint}")
                 }
-                startActivity(intent)
             }
-        }
+        })
+
 
     }
 }
Index: app/src/main/java/com/example/kakaotest/Map/MapActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakaotest.Map\n\nimport android.content.ContentValues\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.BitmapFactory\nimport android.os.Bundle\nimport android.util.Log\nimport android.widget.AdapterView\nimport android.widget.FrameLayout\nimport android.widget.Toast\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.kakaotest.Plan.SelectedPlaceData\nimport com.example.kakaotest.R\nimport com.example.kakaotest.databinding.ActivityMapBinding\nimport com.skt.tmap.TMapData\nimport com.skt.tmap.TMapData.OnFindAllPOIListener\nimport com.skt.tmap.TMapPoint\nimport com.skt.tmap.TMapView\nimport com.skt.tmap.overlay.TMapMarkerItem\nimport com.skt.tmap.overlay.TMapPolyLine\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport retrofit2.Retrofit\nimport retrofit2.converter.gson.GsonConverterFactory\n\n\nclass MapActivity : AppCompatActivity() {\n    private val selectedPlacesList = ArrayList<SearchData>() //선택한 장소 저장하는 list\n    val searchDataList = arrayListOf<SearchData>()\n    var searchDataList2 = ArrayList<SearchData>()\n\n    private var mBinding: ActivityMapBinding ?= null\n    private val binding get() = mBinding!!\n    private val routetest = MakeRoute()\n    var startpoint: TMapPoint? = null\n    var endpoint: TMapPoint? = null\n    lateinit var start: TMapPoint\n    lateinit var end: TMapPoint\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        mBinding = ActivityMapBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        //이부분 tmap sdk에도 BuildConfig가 있어서 고생좀 함\n        //여기 오류나면 상단바 Build -> Rebuild Project 누르면 됨\n     //   val appKey: String = BuildConfig.app_key\n\n        val sharedPreferences = getSharedPreferences(\"MyPrefs\", Context.MODE_PRIVATE)\n        sharedPreferences.edit().putString(\"app_key\", \"8Mi9e1fjtt8L0SrwDMyWt9rSnLCShADl5BWTm3EP\").apply()\n\n        // 값을 가져옴\n        val appKey: String? = sharedPreferences.getString(\"app_key\", null)\n\n        // FrameLayout 컨테이너를 XML에서 찾아옴\n        val container: FrameLayout = findViewById(R.id.tmapViewContainer)\n        // TMapView 인스턴스를 생성\n        val tMapView = TMapView(this@MapActivity)\n        val tMapData = TMapData()\n        val tMapGps = TMapPoint()\n        val apiAdapter = ApiAdapter()\n\n        // TMapView를 FrameLayout에 추가\n        container.addView(tMapView)\n        // 발급받은 키로 TMapView에 API 키 설정\n        tMapView.setSKTMapApiKey(appKey)\n\n        val searchDataAdapter = DataAdapter(this,searchDataList)\n        binding.searchDataListView.adapter = searchDataAdapter\n\n\n\n        binding.searchDataListView.onItemClickListener = AdapterView.OnItemClickListener { parent, view, position, id ->\n            val selectItem = parent.getItemAtPosition(position) as SearchData\n\n            //apiAdapter.apiRequest(126.862833,35.151286,126.883917,35.153113)\n           // Toast.makeText(this, \"${selectItem.tpoint.latitude}\", Toast.LENGTH_SHORT).show()\n            tMapView.setCenterPoint(selectItem.tpoint.latitude,selectItem.tpoint.longitude)\n            tMapView.zoomLevel = 15\n\n            //두 지점간의 경로 탐색\n            if(startpoint==null || endpoint==null){\n                if(startpoint==null){\n                    startpoint = selectItem.tpoint\n                  //  Toast.makeText(this, \"시작지역: ${selectItem.id}\", Toast.LENGTH_SHORT).show()\n                }else if(endpoint==null){\n                    endpoint = selectItem.tpoint\n                   // Toast.makeText(this, \"도착지역: ${selectItem.id}\", Toast.LENGTH_SHORT).show()\n                }\n            }\n\n            // 중복된 장소인지 확인\n            if (!isPlaceAlreadySelected(selectItem)) {\n              //  Toast.makeText(this, selectItem.id, Toast.LENGTH_SHORT).show()\n\n                // 선택한 장소를 리스트에 추가\n                selectedPlacesList.add(selectItem)\n                \n          \n\n               // 선택한 장소를 SelectedPlaceData에 추가\n                val selectedPlaceData = SelectedPlaceData(\n                    placeName = selectItem.id,\n                    tpoint = TMapPoint(selectItem.tpoint.latitude, selectItem.tpoint.longitude),\n                    address = selectItem.address\n\n                )\n\n                Log.d(\"ITEM\", selectItem.toString())\n\n                // 리스트에 추가된 모든 장소를 SelectedPlaceData 리스트로 변환\n                val selectedPlaceDataList = selectedPlacesList.map {\n                    SelectedPlaceData(\n                        placeName = it.id,\n                        tpoint = TMapPoint(it.tpoint.latitude, it.tpoint.longitude),\n                        address = it.address\n                    )\n\n                }\n\n\n\n                binding.nextbutton.setOnClickListener {\n                    val intent = Intent(this, SelectedPlace::class.java)\n                    intent.putParcelableArrayListExtra(\"selectedPlaceDataList\", ArrayList(selectedPlaceDataList))\n                    startActivity(intent)\n                    Log.d(\"Item\", selectedPlacesList.toString())\n\n                }\n\n            } else {\n                Toast.makeText(this, \"이미 선택된 장소입니다.\", Toast.LENGTH_SHORT).show()\n            }\n\n        }\n\n\n        // 맵 로딩 완료 시 동작할 리스너 설정\n        tMapView.setOnMapReadyListener(object : TMapView.OnMapReadyListener {\n            override fun onMapReady() {\n                // 맵 로딩이 완료된 후에 수행할 동작을 구현해주세요\n                // 예: 마커 추가, 경로 표시 등\n                Toast.makeText(this@MapActivity, \"MapLoading\", Toast.LENGTH_SHORT).show()\n                tMapView.setCenterPoint(tMapGps.katecLat, tMapGps.katecLon)\n                tMapView.zoomLevel = 10\n\n                val marker = TMapMarkerItem()\n                marker.id = \"marker1\"\n                marker.setTMapPoint(tMapGps.katecLat, tMapGps.katecLon)\n                marker.icon = BitmapFactory.decodeResource(resources, R.drawable.point)\n                tMapView.addTMapMarkerItem(marker)\n\n\n                binding.searchButton.setOnClickListener{\n                    tMapView.removeAllTMapMarkerItem()\n                    tMapView.removeAllTMapPOIItem()\n                    searchDataList.clear()\n\n                    var strData = binding.searchText.text.toString()\n                    tMapData.findAllPOI(strData,\n                        OnFindAllPOIListener { poiItemList ->\n                            var num = 1\n                            for (item in poiItemList) {\n                                Log.e(\n                                    \"Poi Item\",\n                                    \"name:\" + item.poiName + \" address:\" + item.poiAddress\n                                )\n                                marker.id = item.poiName\n                                marker.setTMapPoint(TMapPoint())\n                                marker.icon = BitmapFactory.decodeResource(resources,\n                                    R.drawable.poi\n                                )\n                                tMapView.addTMapMarkerItem(marker)\n                                searchDataList2.add(SearchData(item.poiName,item.poiPoint,item.poiAddress))\n                                runOnUiThread{\n                                    searchDataList.add(SearchData(item.poiName,item.poiPoint,item.poiAddress))\n                                    searchDataAdapter.notifyDataSetChanged()\n                                }\n                                num += 1\n                            }\n\n/*\n                            routetest.routeSet(searchDataList2,searchDataList2[0])\n                            routetest.routeStart(2,6)\n                            routetest.printTotalRoute()\n*/\n                            tMapView.addTMapPOIItem(poiItemList)\n                        })\n\n                }\n\n\n\n                binding.findroute.setOnClickListener {\n                    start = startpoint!!\n                    end = endpoint!!\n\n                    Thread {\n                        try {\n                            val polyLine: TMapPolyLine = tMapData.findPathData(start, end)\n                            if (polyLine != null) {\n                                runOnUiThread {\n                                    tMapView.addTMapPolyLine(polyLine)\n                                }\n                                Toast.makeText(this@MapActivity, \"경로탐색\", Toast.LENGTH_SHORT).show()\n                            } else {\n                                Toast.makeText(this@MapActivity, \"경로를 찾을 수 없습니다.\", Toast.LENGTH_SHORT).show()\n                            }\n                        } catch (e: Exception) {\n                            // 예외 처리 (API 호출이 실패한 경우)\n                            Log.e(\"TMapData\", \"경로 검색 중 오류 발생: ${e.message}\")\n                            runOnUiThread {\n                                Toast.makeText(this@MapActivity, \"경로 검색 중 오류 발생\", Toast.LENGTH_SHORT).show()\n                            }\n                        }\n                    }.start()\n                }\n            }\n        })\n\n\n\n\n\n\n\n\n    }\n\n\n\n    private fun isPlaceAlreadySelected(newPlace: SearchData): Boolean {\n        // 중복된 장소인지 확인\n        for (selectedPlace in selectedPlacesList) {\n            if (selectedPlace.id == newPlace.id) {\n                return true // 이미 선택된 장소가 존재하면 중복으로 판단\n            }\n        }\n        return false // 선택된 장소가 없으면 중복이 아님\n    }\n        fun apiRequest(startX: Number, startY: Number, endX: Number, endY: Number): Number? {\n            val retrofit: Retrofit = Retrofit.Builder()\n                .baseUrl(\"https://apis.openapi.sk.com/tmap/\")\n                .addConverterFactory(GsonConverterFactory.create())\n                .build()\n\n            val apiService: ApiService = retrofit.create(ApiService::class.java)\n\n            var input = HashMap<String, Any>()\n            input[\"startY\"] = startY\n            input[\"startX\"] = startX\n            input[\"endY\"] = endY\n            input[\"endX\"] = endX\n            input[\"totalValue\"] = 2\n\n            val routeCall = apiService.getRoute(input)\n            var totalTime: Number? = null\n\n            routeCall.enqueue(object : Callback<FeatureCollection> {\n                override fun onResponse(\n                    call: Call<FeatureCollection>,\n                    response: Response<FeatureCollection>\n                ) {\n                    val RouteInfo: FeatureCollection? = response.body()\n                    Log.d(ContentValues.TAG, \"getPostList onResponse()\")\n                    Log.d(ContentValues.TAG, \"type : ${RouteInfo?.features?.get(0)?.type}\")\n                    Log.d(\n                        ContentValues.TAG,\n                        \"TotalTime : ${RouteInfo?.features?.get(0)?.properties?.totalTime}\"\n                    )\n                    Log.d(\n                        ContentValues.TAG,\n                        \"TotalDistance : ${RouteInfo?.features?.get(0)?.properties?.totalDistance}\"\n                    )\n                    Log.d(\n                        ContentValues.TAG,\n                        \"TotalFare : ${RouteInfo?.features?.get(0)?.properties?.totalFare}\"\n                    )\n                    totalTime = RouteInfo?.features?.get(0)?.properties?.totalTime\n                }\n\n                override fun onFailure(call: Call<FeatureCollection>, t: Throwable) {\n                    call.cancel()\n                    Log.d(ContentValues.TAG, \"api fail\")\n                    totalTime = null\n                }\n\n            })\n            return totalTime\n        }\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kakaotest/Map/MapActivity.kt b/app/src/main/java/com/example/kakaotest/Map/MapActivity.kt
--- a/app/src/main/java/com/example/kakaotest/Map/MapActivity.kt	(revision 584ebf9acf3f82ddbb5696296a449e1b54df3c3c)
+++ b/app/src/main/java/com/example/kakaotest/Map/MapActivity.kt	(date 1715315357082)
@@ -75,8 +75,6 @@
         binding.searchDataListView.onItemClickListener = AdapterView.OnItemClickListener { parent, view, position, id ->
             val selectItem = parent.getItemAtPosition(position) as SearchData
 
-            //apiAdapter.apiRequest(126.862833,35.151286,126.883917,35.153113)
-           // Toast.makeText(this, "${selectItem.tpoint.latitude}", Toast.LENGTH_SHORT).show()
             tMapView.setCenterPoint(selectItem.tpoint.latitude,selectItem.tpoint.longitude)
             tMapView.zoomLevel = 15
 
Index: .idea/migrations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/migrations.xml b/.idea/migrations.xml
new file mode 100644
--- /dev/null	(date 1714636646099)
+++ b/.idea/migrations.xml	(date 1714636646099)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectMigrations">
+    <option name="MigrateToGradleLocalJavaHome">
+      <set>
+        <option value="$PROJECT_DIR$" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
